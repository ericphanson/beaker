name: Beaker GUI CI

on:
  push:
    paths:
      - 'beaker-gui/**'
      - '.github/workflows/beaker-gui-ci.yml'
  pull_request:
    paths:
      - 'beaker-gui/**'
      - '.github/workflows/beaker-gui-ci.yml'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y mesa-vulkan-drivers libvulkan1 libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        working-directory: beaker-gui
        run: cargo build --release

      - name: Test
        working-directory: beaker-gui
        run: cargo test --verbose
        env:
          # Use software rendering for tests in CI
          WGPU_BACKEND: vulkan

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Check formatting
        working-directory: beaker-gui
        run: cargo fmt --check

      - name: Clippy
        working-directory: beaker-gui
        run: cargo clippy -- -D warnings
