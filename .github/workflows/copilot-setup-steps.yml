name: Copilot Agent Environment Setup

on:
  workflow_call:
  workflow_dispatch:

jobs:
  copilot-setup-steps:
    name: Setup Development Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "setup"

      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python development tools
        run: uv pip install --system pre-commit ruff

      - name: Setup pre-commit hooks
        run: pre-commit install || echo "pre-commit install failed, continuing..."

      - name: Cache ONNX models
        uses: actions/cache@v4
        with:
          path: ~/.cache/onnx-models
          key: onnx-models-setup-v1
          restore-keys: onnx-models-

      - name: Set environment variables
        run: |
          echo "CARGO_TERM_COLOR=always" >> $GITHUB_ENV
          echo "ONNX_MODEL_CACHE_DIR=$HOME/.cache/onnx-models" >> $GITHUB_ENV
          echo "RUST_LOG=warn" >> $GITHUB_ENV

      - name: Verify installations
        run: |
          echo "Verifying tool installations..."
          echo "=== GitHub CLI ==="
          gh --version
          echo ""
          echo "=== Rust ==="
          rustc --version
          cargo --version
          cargo fmt --version
          cargo clippy --version
          echo ""
          echo "=== Just ==="
          just --version
          echo ""
          echo "=== Python ==="
          python --version
          uv --version
          ruff --version
          pre-commit --version
          echo ""
          echo "Environment setup complete!"

      - name: Run validation
        run: |
          echo "Running basic validation..."
          just fmt-check || echo "Format check failed"
          just clippy || echo "Clippy check failed"
          pre-commit run --all-files || echo "Pre-commit checks failed"
          echo "Validation complete!"
